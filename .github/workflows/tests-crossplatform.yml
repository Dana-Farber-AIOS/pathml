name: Tests Cross-Platform

on:
  workflow_dispatch:
  pull_request:
    branches:
      - dev
      - master
  push:
    branches:
      - dev
      - master

jobs:
  build:
    name: Build (${{ matrix.os }}, Python ${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.8, 3.9, 3.10]
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          miniforge-version: latest
          use-mamba: true
          python-version: ${{ matrix.python-version }}
          activate-environment: pathml
          environment-file: environment.yml
          channels: conda-forge

      - name: Conda info
        shell: bash -l {0}
        run: conda info

      - name: Conda Version
        shell: bash -l {0}
        run: conda --version

      # - name: Install additional dependencies
      #   if: matrix.os == 'ubuntu-latest' || matrix.os == 'ubuntu-18.04'
      #   shell: bash -l {0}
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install openslide-tools
      #     sudo apt-get install pandoc

      # - name: Install additional dependencies
      #   shell: bash -l {0}
      #   run: |
      #     mamba install spams torchvision==0.14.1

      # - name: Test with coverage
      #   shell: bash -l {0}
      #   run: |
      #     coverage run -m pytest
      #     coverage xml -o coverage.xml

      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v2
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     files: ./coverage.xml
      #     fail_ci_if_error: true
